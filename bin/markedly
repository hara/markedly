#!/usr/bin/env ruby

require 'markedly'
require 'optparse'

options = {}
default = {
  css: 'github',
  debug: false,
  interval: 5,
  port: Markedly::Document::DEFAULT_PORT,
  parse: Markedly::Markdown::DEFAULT_EXTENSIONS,
  render: Markedly::Markdown::DEFAULT_RENDERER_OPTIONS,
}

ARGV.options do |parser|
  parser.version = Markedly::VERSION

  parser.banner =
    'Usage: markedly [redcarpet options] [markedly options] document.md'

  parser.separator ''
  parser.separator 'Redcarpet Options:'

  Markedly::Markdown::AVAILABLE_EXTENSIONS.each do |ext|
    parser.on('--parse-' + ext.to_s.gsub('_', '-')) do
      (options[:parse] ||= {})[ext] = true
    end
  end

  Markedly::Markdown::RENDERER_OPTIONS.each do |render|
    parser.on('--render-' + render.to_s.gsub('_', '-')) do
      (options[:render] ||= {})[render] = true
    end
  end

  parser.separator ''
  parser.separator 'Markedly Options:'

  css_message = "use predefined or custom CSS (default: #{default[:css]})"
  parser.on('-c', '--css CSS', css_message) do |css|
    options[:css] = css
  end

  parser.on('-d', '--debug', 'output debug message') { options[:debug] = true }

  parser.on('-e', '--export', 'export to file') { options[:export] = true }

  interval_message =
    "watch every INTERVAL seconds (default: #{default[:interval]})"
  parser.on('-i', '--interval INTERVAL', Integer, interval_message) do |i|
    options[:interval] = i
  end

  port_message = "use PORT (default: #{default[:port]})"
  parser.on('-p', '--port PORT', port_message) do |port|
    options[:port] = port
  end

  parser.on('-h', '--help', 'show this message') do
    puts parser.to_s
    exit
  end

  parser.on('-v', '--version', 'show version') do
    puts parser.ver
    exit
  end
end

begin
  ARGV.permute!
rescue OptionParser::InvalidOption => e
  warn e.message
  abort ARGV.options.to_s
end

abort ARGV.options.to_s if ARGV.empty?

source = ARGV.first
options = default.merge(options)

abort "#{source} not found" unless File.file?(source)

Markedly::App.run!(source, options)
